#include<iostream>
using namespace std;
//构造函数调用规则
/*
	默认情况下，C++编译器至少给一个类添加3个函数
		默认构造函数（无参，函数体为空)
		默认析构函数（无参,函数体为空）
		默认拷贝构造函数，对属性值进行拷贝
	构造函数调用规则：
		如果用户定义有参构造函数，C++不再提供无参构造，但是会提供默认拷贝构造
		如果用户定义拷贝构造函数，C++不再提供其他构造函数
*/

class Bed {
public:
	//无参（默认）构造函数
	Bed() {
		cout << "无参构造函数!" << endl;
	}
	//有参构造函数
	Bed(int a) {
		age = a;
		cout << "有参构造函数!" << endl;
	}
	//拷贝构造函数
	Bed(const Bed& p) {
		age = p.age;
		cout << "拷贝构造函数!" << endl;
	}
	//析构函数
	~Bed() {
		cout << "析构函数!" << endl;
	}
public:
	int age;
};

void test001()
{
	Bed p1(18);
	//如果不写拷贝构造，编译器会自动添加拷贝构造，并且做浅拷贝操作
	Bed p2(p1);

	cout << "p2的年龄为： " << p2.age << endl;
}

void test002()
{
	//如果用户提供有参构造，编译器不会提供默认构造，会提供拷贝构造
	Bed p1; //此时如果用户自己没有提供默认构造，会出错
	Bed p2(10); //用户提供的有参
	Bed p3(p2); //此时如果用户没有提供拷贝构造，编译器会提供

	//如果用户提供拷贝构造，编译器不会提供其他构造函数
	Bed p4; //此时如果用户自己没有提供默认构造，会出错
	Bed p5(10); //此时如果用户自己没有提供有参，会出错
	Bed p6(p5); //用户自己提供拷贝构造
}

void rulesConstructor() {
	test001();
	test002();
}