#include<iostream>
using namespace std;
#include "00_函数.h"
/*
面向对象的三大特性为：封装、继承、多态
万事万物皆对象
*/
//测试函数
int main() {

	//封装
	//encapsulation();//封装案例
	//accessControl();//权限控制
	//diffInStructAndClass();//struct和class的区别
	//privateAttribute();//成员属性设置为私有
	//caseCube();//封装案例1 Cube
	//relationBCP();//封装案例2 点与圆的关系

	//对象的初始化和清理
	//constructionAndDestruction();	//构造函数与析构函数
	//constructionClassification();//构造函数的分类及调用
	//copyConstructor();//拷贝构造函数的调用时机
	//rulesConstructor();//构造函数调用规则
	//shallowCopyAndDeepCopy();//浅拷贝与深拷贝
	//initialList();//初始化列表
	//testClass();	//类对象作为类成员
	//staticTest();	//静态成员测试

	//C++对象模型和指针
	//useSize();	//成员变量与成员函数
	//thisTest();		//this指针测试
	//testNullPointer();//空指针访问测试
	//testConst();//const修饰成员函数

	//友元
	//friendTest();//全局函数作为友元
	//friendTest2();//类作为友元
	//friendTest3();//成员函数作为友元

	//运算符重载
	//operatorTest();//+号运算符重载
	//operatorTest2();//<<运算符重载
	//operatorTest3();//递增运算符重载
	//operatorTest4();//递减运算符重载
	//operatorTest5();//赋值运算符重载
	//operatorTest6();//关系运算符重载
	//operatorTest7();//函数调用运算符重载

	//继承
	//inherit();//继承基本概念
	//inheritTest();//继承中的对象模型
	//inheritTest2();//继承中构造和析构顺序
	//inheritTest3();//继承中同名成员处理方式
	//sameStaticFunc();//继承中同名静态成员处理方式
	//multyInherit();	//多继承语法
	//virtualInherit();//菱形继承

	//多态
	//multyTest();//多态基本概念
	//polymorTest();//多态计算机类测试
	//pureVirtual();//纯虚函数和抽象类
	//doWork();	//茶水冲泡案例
	//test75();//虚析构与纯虚析构
	//testCom();//电脑组装案例

	//文件操作
	//fileWriter();//文件写操作
	//fileRead();//文件读取操作
	binaryWriter();//二进制文件写操作
	binaryRead();//二进制文件读取操作

	system("pause");
	return 0;
}